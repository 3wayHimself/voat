@*

    Copyright(c) Voat, Inc.

    This file is part of Voat.

    This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl-3.0.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an
    "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express
    or implied. See the License for the specific language governing
    rights and limitations under the License.

    All Rights Reserved.

*@

@model Voat.Data.Models.Vote
<div id="container">
    <div role="main">
        <div class="row nomargin" data-vote-item="vote">
            <div class="validation-summary-errors">THIS IS A NON FUNCTIONAL PROTOTYPE</div>
            <div class="alert-title">Create/Edit Vote</div>
            <div class="form-horizontal" role="form">
                <input asp-for="SubverseID" type="hidden" data-vote-field="vote">
                <input asp-for="ID" type="hidden" data-vote-field="vote">
                <div class="form-group">
                    <label class="col-md-2 control-label" for="Subverse">Subverse</label>
                    <div class="col-md-10">
                        <input id="Subverse" name="Subverse" class="form-control" type="text" data-vote-field="vote" disabled="disabled" value="Subverse Name">
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-2 control-label" for="Bio">Title</label>
                    <div class="col-md-10">
                        <input asp-for="Title" class="form-control" type="text" data-vote-field="vote">
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-2 control-label" for="Bio">Description</label>
                    <div class="col-md-10">
                        <textarea asp-for="Content" class="form-control" data-vote-field="vote"></textarea>
                    </div>
                </div>
            </div>
            <div>
                <div class="alert-title">Options</div>
                <div data-vote-list="Options">
                    @foreach (var option in Model.VoteOptions)
                    {
                        @Html.Partial("_Option", option);
                    }
                </div>
                <div class="form-horizontal" role="form">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-3">
                            <button class="btn-whoaverse" onclick="voat.voting.addOption(this);" type="button">Add Option</button>
                        </div>
                    </div>
                </div>
            </div>
            <div>
                <div class="alert-title">Restrictions</div>
                <div data-vote-list="Restrictions"></div>
                <div class="form-horizontal" role="form">
                    <div class="form-group">
                        <label class="col-md-2 control-label" for="Bio">Restriction (Optional)</label>
                        <div class="col-md-10">
                            @*Get this data from reflection*@
                            <select name="vote-restriction-type" class="form-control" id="vote-restriction-type" type="text">
                                <option value="ContributionPointRestriction">Contribution Point Restriction</option>
                                <option value="ContributionCountRestriction">Contribution Count Restriction</option>
                                <option value="ContributionVoteRestriction">Contribution Vote Restriction</option>
                                @*<option value="MemberAgeRestriction">Member Age Restriction</option>
                                <option value="SubscriberRestriction">Subscriber Restriction</option>*@
                            </select>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-3">
                            <button class="btn-whoaverse" type="button" onclick="voat.voting.addRestriction(this);">Add Restriction</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <button class="btn-whoaverse" type="button" onclick="voat.voting.save();">Save</button>
    </div>
</div>


@section PageScripts {

    <script>
        var voat = {
            voting: {

                addOption: function (source){
                    $.ajax({
                        type: 'GET',
                        url: '/vote/element?type=VoteOption',
                        success: function (data) {
                            $('div[data-vote-list="Options"]').append(data);
                        }
                    });
                },
                addRestriction: function (source) {
                    var type = $("#vote-restriction-type").val();

                    $.ajax({
                        type: 'GET',
                        url: '/vote/element?type=' + type,
                        success: function (data) {
                            $('div[data-vote-list="Restrictions"]').append(data);
                        }
                    });
                },
                addOutcome: function (source) { 

                    var type = $("#vote-outcome-type").val();
                    var caller = source;
                    $.ajax({
                        type: 'GET',
                        url: '/vote/element?type=' + type,
                        success: function (data) {

                            var optionItem = $(caller).closest('div[data-vote-item="Options"]');
                            var outcomeList = optionItem.find('div[data-vote-list="Outcomes"]');
                            outcomeList.append(data);

                        }
                    });
                },
                removeItem: function (source, itemClass) {
                    var itemToRemove = $(source).parents(itemClass);
                    itemToRemove.remove();
                },
                populateModelList: function (model, container, listName) {

                    var selector = '*[data-vote-item="' + listName + '"]';
                    var items = container.find(selector);

                    for (var i = 0; i < items.length; i++)
                    {
                        model[i] = {};
                        var listItem = $(items[i]);
                        voat.voting.populateModel(model[i], listItem, listName, 1);
                    }
                },
                populateModelFields: function(model, item, listName) { 

                    var fields = item.find('*[data-vote-field="' + listName + '"]');
                    //var fields = voat.voting.filterLevel(allFields, '[data-vote-field]', item.parents('[data-vote-field]').length);
                    $(fields).each(function (){
                        var field = $(this); 
                        model[field.attr('name')] = field.val();
                    });
                    
                },
                populateModel: function (model, rootSelector, listName, level) {

                    //populate fields
                    voat.voting.populateModelFields(model, $(rootSelector), listName); 

                    //populate lists
                    var allLists = $(rootSelector).find('*[data-vote-list]')
                    var lists = voat.voting.filterLevel(allLists, '*[data-vote-list]', level);
                    $(lists).each(function () {
                        var list = $(this);
                        var listName = list.attr('data-vote-list');
                        model[listName] = [];
                        var listModel = model[listName];
                        voat.voting.populateModelList(listModel, list, listName)
                    });
                    //model['Title = v.find("#Title").val();
                    //model.Content = v.find("#Content").val();
                },

                filterLevel: function (items, selector, nestLevel) {
                    var filtered = [];
                    //var currentNestLevel = $(selector).parents(selector).length;
                    //relativeNestLevel += currentNestLevel;
                    $(items).each(function () {
                        var item = $(this);
                        if (item.parents(selector).length == nestLevel) {
                            filtered.push(item);
                        }
                    })
                    return filtered;
                },
                save: function () {
                    var model = {};

                    voat.voting.populateModel(model, '*[data-vote-item="vote"]', "vote", 0);
                    //model.VoteOptions = [];
                    //voat.voting.populateModelCollection(model.VoteOptions, $("#vote-option-container"), 'vote-option'); 
                    //model.VoteRestrictions = [];
                    //voat.voting.populateModelCollection(model.VoteRestrictions, $("#vote-restriction-container"), 'vote-restriction'); 


                    $.ajax({
                        type: 'POST',
                        url: '/vote/save',
                        data: JSON.stringify(model),
                        contentType: "application/json",
                        success: function (data) {
                            //alert('save came back');
                        }
                    });

                }
            }
        }
    </script>

}