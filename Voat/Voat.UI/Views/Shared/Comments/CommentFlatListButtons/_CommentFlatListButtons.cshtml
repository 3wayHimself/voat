@*This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an "AS IS" basis,
    WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
    the specific language governing rights and limitations under the License.

    All portions of the code written by Voat are Copyright (c) 2014 Voat
    All Rights Reserved.*@

@model Voat.Domain.Models.NestedComment

@*@{
    string commentAuthor = Model.CommentModel.UserName;
    int commentId = Model.CommentModel.ID;
}*@

<ul class="flat-list buttons">
    @if (!Model.IsDeleted)
    {
        <li class="first">
            <a href="/v/@ViewBag.Subverse.Name/comments/@Model.SubmissionID/@Model.ID" class="bylink" rel="nofollow">permalink</a>
        </li>
    }

    @if (Model.ParentID != null)
    {
        <li>
            <a onclick="goToParent(event, @Model.ParentID)" href="/v/@ViewBag.Subverse.Name/comments/@Model.SubmissionID/@Model.ParentID" rel="nofollow">parent</a>
        </li>
    }

    @if (User.Identity.IsAuthenticated)
    {
        string loggedInUserName = User.Identity.Name;

        //returns true if user has saved this post
        bool? savedOrNot = null;
        if (ViewBag.SavedCommentCache != null)
        {
            foreach (var cv in ViewBag.SavedCommentCache)
            {
                if (cv.CommentID == Model.ID)
                {
                    savedOrNot = true;
                    break;
                }
            }
        }
        else
        {
            //backwards compat if ViewBad.VoteCache isn't populated as many code paths funnel here
            savedOrNot = SavingComments.CheckIfSavedComment(loggedInUserName, Model.ID);
        }
        var saveString = savedOrNot == true ? "unsave" : "save";

        if (!Model.IsDeleted)
        {
            <li>
                <a class="savelink" href="javascript:void(0)" onclick="return toggleSaveComment(@Model.ID);">@saveString</a>
            </li>
        }

        if (!Model.IsDeleted && Model.IsSubmitter)
        {
            <li>
                <a class="" href="javascript:void(0)" onclick="toggleSource(this);">source</a>
            </li>
        }

        // if user is sub admin or sub mod but not comment author, show delete button
        if (!Model.IsSubmitter && !Model.IsDeleted)
        {
            if (UserHelper.IsUserSubverseModerator(User.Identity.Name, ViewBag.SubverseName))
            {
                @Html.Partial("~/Views/Shared/Comments/CommentFlatListButtons/_CFLButtonDelete.cshtml", null, new ViewDataDictionary { { "CommentId", Model.ID } })
            }
        }

        // if user is comment author, show edit and delete buttons
        if (Model.IsSubmitter && !Model.IsDeleted)
        {
            <li>
                <a class="" href="javascript:void(0)" onclick="return edit(@Model.ID, @Model.SubmissionID)">edit</a>
            </li>
            @Html.Partial("~/Views/Shared/Comments/CommentFlatListButtons/_CFLButtonDelete.cshtml", null, new ViewDataDictionary { { "CommentId", Model.ID } })

            // if user is comment author but also sub mod or sub admin show distinguish button
            if (UserHelper.IsUserSubverseModerator(User.Identity.Name, ViewBag.SubverseName))
            {
                <li>
                    <a class="" href="javascript:void(0)" onclick="return distinguish(@Model.ID, this)">distinguish</a>
                </li>
            }
        }

        if (!Model.IsDeleted)
        {
            <li>
                <a class="" href="javascript:void(0)" onclick="return reply(@Model.ID, @Model.SubmissionID)">reply</a>
            </li>
            @Html.Partial("~/Views/Shared/Comments/CommentFlatListButtons/_CFLButtonReport.cshtml", null, new ViewDataDictionary { { "CommentId", Model.ID } })
        }
    }
</ul>
