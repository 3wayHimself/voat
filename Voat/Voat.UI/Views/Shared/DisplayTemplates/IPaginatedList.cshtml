
@model Voat.Utilities.IPaginatedList

@{
    if (Model.RouteData == null)
    {
        Model.RouteData = new RouteValueDictionary();
    }
    var routeLink = false;
    if (!String.IsNullOrEmpty(Model.RouteName))
    {
        routeLink = true;
    }
    var viewDic = ViewBag;

    <div class="pagination-container">
        <ul>
            @if (Model.HasPreviousPage)
            {
                Model.RouteData["page"] = Model.PageIndex - 1;
                <li class="btn-whoaverse-paging">
                    @if (routeLink)
                    {
                        <a href='@Url.RouteUrlPretty(Model.RouteName, Model.RouteData)'>< prev</a>
                        //@Html.RouteLink("< prev", Model.RouteName, Model.RouteData)
                    }
                    else
                    {
                        <a href='@Url.ActionPretty((string)Request.RequestContext.RouteData.Values["action"], Model.RouteData)'>< prev</a>
                        //@Html.ActionLink("< prev", (string)Request.RequestContext.RouteData.Values["action"], Model.RouteData)
                    }
                </li>
            }
            @if (Model.HasNextPage)
            {
                Model.RouteData["page"] = Model.PageIndex + 1;
                <li class="btn-whoaverse-paging">
                    @if (routeLink)
                    {
                        <a href='@Url.RouteUrlPretty(Model.RouteName, Model.RouteData)'>next ></a>
                        //@Html.RouteLink("next >", Model.RouteName, Model.RouteData)
                    }
                    else
                    {
                        <a href='@Url.ActionPretty((string)Request.RequestContext.RouteData.Values["action"], Model.RouteData)'>next ></a>
                        //@Html.ActionLink("next >", (string)Request.RequestContext.RouteData.Values["action"], Model.RouteData)
                    }
                </li>
            }
        </ul>
    </div>
}