
@model Voat.Domain.Models.DomainReference

@{ 

    Voat.Domain.UserData userData = ViewBag.UserData;
    //Voat.Domain.Models.DomainReference domainReference = ViewBag.DomainReference;

    var jsCommand = String.Format("return subscribeToSubverse($(this), '{0}')", Model.Name);

    if (Model.Type == Voat.Domain.Models.DomainType.Set)
    {
        jsCommand = String.Format("return subscribeToSet($(this), '{0}', '{1}')", Model.Name, Model.OwnerName);
    }
    var subscriber = false;
    if (userData != null)
    {
        subscriber = userData.IsSubscriber(Model);
    }
}

@if (User.Identity.IsAuthenticated)
{
    <button type="button" class='@(subscriber ? "btn-voat btn-voat-off" : "btn-voat")' onclick="@jsCommand">@(subscriber ? "unsubscribe" : "subscribe")</button>

    if (Model.Type == Voat.Domain.Models.DomainType.Subverse)
    {

        if (userData.IsUserBlockingSubverse(Model.Name))
        {
            <button type="button" class="btn-whoaverse-paging btn-xs btn-default btn-unblocksubverse" onclick="return blockSubverseToggle(this, '@Model.Name')">unblock</button>
        }
        else
        {
            <button type="button" class="btn-whoaverse-paging btn-xs btn-default btn-blocksubverse" onclick="return blockSubverseToggle(this, '@Model.Name')">block</button>
        }
    }

}
else
{
    <button type="button" class="btn-voat" onclick="mustLogin();">subscribe</button>
}