@*This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an "AS IS" basis,
    WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
    the specific language governing rights and limitations under the License.

    All portions of the code written by Whoaverse are Copyright (c) 2014 Whoaverse
    All Rights Reserved.*@

@model Whoaverse.Models.Comment

@{
    DateTime submissionDate = Model.Date;
    string postAge = Whoaverse.Utils.Submissions.CalcSubmissionAge(submissionDate);
    string opName = Model.Message.Name;
    string commentAuthor = Model.Name;
    string authorClass = "";
    string authorSpanClass = "";

    //apply class style if OP is the Comment Author
    opName = opName.Trim();
    commentAuthor = commentAuthor.Trim();

    if (opName == commentAuthor)
    {
        authorClass = "submitter";
        authorSpanClass = "[<a class=\"submitter\" title=\"submitter\" href=\"/comments/" + @Model.MessageId + "/\">S</a>]";
    }
}

        <!-- 1 submission comment -->
        <p class="parent">
            <a name="cgjenno"></a>
        </p>

        @Html.Partial("_votingIconsComment", Model)

        <div class="entry unvoted">
            <div class="collapsed" style='display:none'>
                <a href="#" class="expand" onclick="return showcomment(@Model.Id)">[+]</a>
                <a href="/user/@Model.Name" class="author gray @authorClass may-blank id-t2_@Model.Id">@Model.Name</a>
                <span class="userattrs">@Html.Raw(authorSpanClass)</span>&#32;
                <span class="score dislikes">@Model.Dislikes points</span>
                <span class="score unvoted">@Model.Votes point</span>
                <span class="score likes">@Model.Likes points</span>
                <time title="@Model.Date" datetime="@Model.Date">@postAge</time>&#32;ago &nbsp;<a href="#" class="expand" onclick="return showcomment(@Model.Id)">(show children)</a>
            </div>
            <div class="noncollapsed" id="@Model.Id">
                <p class="tagline">
                    <a href="#" class="expand" onclick="return hidecomment(@Model.Id)">[&ndash;]</a>
                    <a href="/user/@Model.Name" class="author @authorClass may-blank id-t2_@Model.Id">@Model.Name</a>
                    <span class="userattrs">@Html.Raw(authorSpanClass)</span>&#32;
                    <span class="score dislikes">@Model.Dislikes points</span>
                    <span class="score unvoted">@Model.Votes points</span>
                    <span class="score likes">@Model.Likes points</span>
                    <time title="@Model.Date" datetime="@Model.Date">@postAge</time>&#32;ago
                </p>
                <form class="usertext" onsubmit="return editcommentsubmit(@Model.Id)" id="form-t1_cgjennopb1" action="#">
                    @Html.AntiForgeryToken()
                    <input id="CommentId" name="CommentId" value="@Model.Id" type="hidden">

                    <div class="usertext-body may-blank-within">
                        <div class="md">
                            @Html.Raw(@Whoaverse.Utils.Formatting.FormatMessage(@Model.CommentContent))
                        </div>
                    </div>

                    <div class="usertext-edit" style="width: 775px; display: none;">
                        <div>
                            @Html.TextAreaFor(m => m.CommentContent, new { @class = "form-control" })
                            <div class="usertext-buttons">
                                <input value="Save" class="btn-whoaverse-paging" type="submit">
                                <button class="btn-whoaverse-paging" onclick="removeeditform(@Model.Id)" type="button">Cancel</button>
                            </div>
                        </div>
                    </div>

                </form>
                <ul class="flat-list buttons">
                    <li class="first">
                        <a href="/comments/@Model.MessageId" class="bylink" rel="nofollow">permalink</a>
                    </li>
                    @{
                        if (User.Identity.IsAuthenticated)
                        {                           

                            if (User.Identity.Name == commentAuthor)
                            {
                                
                                <li>
                                    <a class="" href="javascript:void(0)" onclick="return edit(@Model.Id, @Model.MessageId)">edit</a>
                                </li>
                                <li>
                                    <a class="" href="javascript:void(0)" onclick="return delete(@Model.Id, @Model.MessageId)">delete</a>
                                </li>
                            }
                            
                            <li>
                                <a class="" href="javascript:void(0)" onclick="return reply(@Model.Id, @Model.MessageId)">reply</a>
                            </li>

                        }
                    }

                </ul>

            </div>
        </div>
