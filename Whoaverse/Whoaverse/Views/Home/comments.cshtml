@*This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an "AS IS" basis,
    WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
    the specific language governing rights and limitations under the License.

    All portions of the code written by Whoaverse are Copyright (c) 2014 Whoaverse
    All Rights Reserved.*@

@model Whoaverse.Models.Message

@{
    string selectedSubverse = ViewBag.SelectedSubverse;
}

<style type="text/css">
    body > .content .link .rank {
        width: 3.2ex;
    }
</style>

<!--
    display 1 submission with details and comments
-->

<div class="content" role="main">

    <br /><br />

    @{
        //type 1 = message submission
        if (Model.Type == 1)
        {
            ViewBag.Title = Model.Title;
            @Html.Partial("_MessageSubmissionDetails", Model)
        }

        //type 2 = link submission
        if (Model.Type == 2)
        {
            ViewBag.Title = Model.Linkdescription;
            @Html.Partial("_LinkSubmissionDetails", Model)
        }
    }


    @{
        //if user logged in, show add comment form
        if (User.Identity.IsAuthenticated)
        {
            @Html.Partial("_AddComment", new ViewDataDictionary { { "messageId", Model.Id } });
        }
    }

    <!-- show top 200 submission comments, orderby number of votes each comment has received -->
    <div class='commentarea'>
        <div>
            <h2><span class="label label-default">top 200 comments</span>&nbsp;<a href="#" class="title-button ">show 500</a></h2>
            <br />
            <br />
        </div>

        <div id="siteTable_t3_24nbon" class="sitetable nestedlisting">
<div class=" thing id-t1_cgkmgmm comment " data-fullname="t1_cgkmgmm" data-ups="1" data-downs="0">

    <!-- TODO: order by menu area -->
    @{foreach (var comment in Model.Comments.OrderByDescending(i => i.Votes).Take(200))
            {

                 //root level comment
                if (comment.ParentId == null)
                {
                    @Html.Partial("_SubmissionComment", comment)

                    //look for children comments to this root comment and display them
                    var childComments = from c in Model.Comments
                                        where c.ParentId == comment.Id
                                        select c;

                    if (childComments.Count() > 0)
                    {
                        <div class="child">
                            <div id="siteTable_t3_24nbon" class="sitetable nestedlisting">
                                <div class=" thing id-t1_cgkmgmm comment " data-fullname="t1_cgkmgmm" data-ups="1" data-downs="0">

                                    @{

                        foreach (var singleChildComment in childComments)
                        {
                            @*<div class="child">*@

                                @Html.Partial("_SubmissionComment", singleChildComment)

                            @*</div>*@

                            //look for children comments to this first level child comment and display them
                            var childCommentsLevelTwo = from c in Model.Comments
                                                        where c.ParentId == singleChildComment.Id
                                                        select c;

                            if (childCommentsLevelTwo.Count() > 0)
                            {
                                <div class="child">
                                    <div id="siteTable_t3_24nbon" class="sitetable nestedlisting">
                                        <div class=" thing id-t1_cgkmgmm comment " data-fullname="t1_cgkmgmm" data-ups="1" data-downs="0">

                                            @{
                                foreach (var singleChildCommentLevelTwo in childCommentsLevelTwo)
                                {

                                    @Html.Partial("_SubmissionComment", singleChildCommentLevelTwo)

                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            }


                        }

                                    }
                                </div>

                            </div>
                        </div>
                    }

                }




            }

            }

        </div>

        </div>
</div>

