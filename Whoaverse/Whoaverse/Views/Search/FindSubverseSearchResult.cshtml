@*This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an "AS IS" basis,
    WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
    the specific language governing rights and limitations under the License.

    All portions of the code written by Whoaverse are Copyright (c) 2014 Whoaverse
    All Rights Reserved.*@

@model PagedList.IPagedList<Whoaverse.Models.Subverse>

@using Whoaverse.Utils;

@{
    ViewBag.Title = "subverses";
    string sortingMode = ViewBag.SortingMode;
    string searchTerm = Request.QueryString["q"].ToString();
    bool includeDescriptions = Request.QueryString["d"].AsBool();
    string urlAction = "";

    if (searchTerm != null)
    {
        urlAction = "?q=" + searchTerm;
    }
}

@using PagedList.Mvc;

<style type="text/css">
    body > .content .link .rank {
        width: 3.2ex;
    }
</style>

<div id="container">
    <div role="main">

        @if (Model.Count > 0)
        {
            @Html.ActionLink("< Go back to frontpage", "Index", "Home")

            <div class="alert alert-info">
                <p>Here are your search results for the term "@searchTerm", we found <b>@Model.TotalItemCount</b> matches:</p>
            </div>

            <div class="sitetable linklisting">
                @foreach (var subverse in Model)
                {
                    @Html.Action("DetailsForSelectedSubverse", "Subverses", new { selectedSubverse = subverse.name });
                }
            </div>
        }
        else
        {
            <div class="alert alert-info">
                <p>Sigh. We weren't able to find anything matching the term "@searchTerm".</p>
            </div>

            @Html.ActionLink("Go back and try again with a different term?", "Search", "Subverses")
        }

        @if (Model.PageCount > 1)
        {
            @Html.PagedListPager(Model, page => Url.Action("FindSubverse", new { q = searchTerm, d = includeDescriptions, page }), WhoaversePagerOptions.PagedListRenderOptions());
        }

    </div>
</div>
